1. What happens when you initialize a repository? Why do you need to do it?

It will initialize a git repository with 0 commit in it, and create the .git file. With the repository you get access to the version control and all the benefit mentioned in lesson 1.

2. How is the staging area different from the working directory and the repository?
What value do you think it offers?

It give you the chance to choose which file you want to change and make your commit, more flexibility in your commit.

3. How can you use the staging area to make sure you have one commit per logical change?

With staging area you can check what exactlly change you have make each commit to ensure that you have one logical change.

4. What are some situations when branches would be helpful in keeping your history organized? How would branches help?

When you want to experimentally try something new and don't want it to affect your master file, a branch can help you to record your changes and change history without modifying the master.

5. How do the diagrams help you visualize the branch structure?

With the diagrams, you can see clearly what your branches contain and what they don't contain. You will also know whether the branch is reachable and whether you need a new branch for your current head.

6. What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

7. What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges
manually?